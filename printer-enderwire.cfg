# Switchwire Galileo Fysetc S6
# To use this config, the firmware should be compiled for the STM32F446 with "64KiB bootloader"
# When calling "menuconfig", enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference
# For flashing, write the compiled klipper.bin to memory location 0x08000000
# dfu-util -R -a 0 -s 0x08000000:leave -D out/klipper.bin

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_24004C000851363131343032-if00

[input_shaper]
shaper_freq_x: 60.0
shaper_type_x: zv
shaper_freq_y: 44.0
shaper_type_y: 2hump_ei

[printer]
kinematics: corexz
max_velocity: 300
max_accel: 3000
max_z_velocity: 50
max_z_accel: 1000
square_corner_velocity: 5.0

######################################################################
# Stepper and Driver Config
######################################################################

[stepper_x]
# X driver
#step_pin: PE11
#dir_pin: PE10
#enable_pin: !PE12
# E1 driver
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
endstop_pin: ^PB14  # PA1 for X-max
rotation_distance: 40
full_steps_per_rotation:200
microsteps: 128
position_endstop: 240
position_max: 240
position_min: -9
homing_speed: 70
homing_positive_dir: true

[tmc2209 stepper_x]
# X driver
#uart_pin: PE8
#tx_pin: PE9
# E1 driver
uart_pin: PC5
tx_pin: PC4
interpolate: False
run_current: 0.6
stealthchop_threshold: 0
driver_TBL: 2
driver_TOFF: 3
driver_HSTRT: 2
driver_HEND: 3
sense_resistor: 0.100

[stepper_y]
step_pin: PD8
dir_pin: PB12
enable_pin: !PD9
endstop_pin: ^PB13
rotation_distance: 40
full_steps_per_rotation:200
microsteps: 128
position_endstop: 0
position_min: 0
position_max: 250
homing_speed: 70
second_homing_speed: 20
homing_retract_dist: 10.0

[tmc2209 stepper_y]
uart_pin: PE13
interpolate: False
run_current: 1.0
stealthchop_threshold: 0
driver_TBL: 2
driver_TOFF: 3
driver_HSTRT: 2
driver_HEND: 3
sense_resistor: 0.070

[stepper_z]
# Z driver
#step_pin: PD14
#dir_pin: PD13
#enable_pin: !PD15
# E2 driver
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
endstop_pin: probe:z_virtual_endstop
rotation_distance: 40
full_steps_per_rotation:200
microsteps: 128
position_max: 200
homing_speed: 50
position_min: -3.0
second_homing_speed: 15.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
# Z driver
#uart_pin: PD12
#tx_pin: PD11
# E2 driver
uart_pin: PE0
tx_pin: PE1
interpolate: False
run_current: 0.6
stealthchop_threshold: 0
driver_TBL: 2
driver_TOFF: 3
driver_HSTRT: 2
driver_HEND: 3
sense_resistor: 0.100

[extruder]
step_pin: PD5
dir_pin: !PD6
enable_pin: !PD4
heater_pin: PB3
sensor_pin: PC0
smooth_time: 1.0
pwm_cycle_time: 0.020
rotation_distance: 35.376
gear_ratio: 7.5:1
full_steps_per_rotation: 200
microsteps: 16
filament_diameter: 1.750
max_extrude_only_distance: 600.0

[tmc2209 extruder]
uart_pin: PA15
tx_pin: PD3
interpolate: False
run_current: 0.4
stealthchop_threshold: 0
driver_TBL: 2
driver_TOFF: 3
driver_HSTRT: 7
driver_HEND: 10
sense_resistor: 0.160

######################################################################
# Heaters and fans
######################################################################

[heater_bed]
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
min_temp: 0
max_temp: 130

[verify_heater heater_bed]
max_error: 200
check_gain_time: 90
hysteresis: 5
heating_gain: 2

# Front Mounted Part Cooling FAN0
[fan]
pin: PB0
cycle_time: 0.050
hardware_pwm: True

# Hotend Cooling FAN1
[heater_fan hotend_fan]
pin: PB1
max_power: 1.0
shutdown_speed: 1.0
kick_start_time: 0.500
heater: extruder
heater_temp: 50.0

# Control Board Cooling FAN2
[controller_fan control_fan]
pin: PB2
max_power: 1.0
shutdown_speed: 1.0
kick_start_time: 0.500
heater: heater_bed
idle_timeout: 120

#####################################################################
# 	Temp Sensors
#####################################################################

[temperature_sensor cpu]
sensor_type: temperature_host

[temperature_sensor mcu]
sensor_type: temperature_mcu

######################################################################
# Probe and Bed Mesh
######################################################################

[probe]
pin: ^PA2
x_offset: 0.0
y_offset: 25.0
#z_offset: 1.85
speed: 40
samples: 1
samples_result: average
sample_retract_dist: 3.0
samples_tolerance: 0.020
samples_tolerance_retries: 3

[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 20.0,40.0
mesh_max: 220.0,220.0
probe_count: 6,6
mesh_pps: 2,2
algorithm: lagrange

[screws_tilt_adjust]
screw1: 125, 100
screw1_name: ref point
screw2: 32, 36
screw2_name: front left screw
screw3: 202, 36
screw3_name: front right screw
screw4: 202, 202
screw4_name: rear right screw
screw5: 32, 202
screw5_name: rear left screw
screw_thread: CCW-M4

######################################################################
# Misc
######################################################################

[exclude_object]

[force_move]
enable_force_move: true

[idle_timeout]
gcode:
  TURN_OFF_HEATERS
  DISABLE_MOTORS
  SET_PIN PIN=caselight VALUE=0.00
timeout: 3600

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

######################################################################
# Display and LEDs
######################################################################

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
menu_timeout: 120

[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0.2
initial_GREEN: 0.5
initial_BLUE: 0.6

#[output_pin beeper]
#pin: EXP1_1

[menu __main __octoprint]
type: disabled

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC9, EXP1_2=PA8,
    EXP1_3=PC11, EXP1_4=PD2,
    EXP1_5=PC10, EXP1_6=PC12,    # Slot in the socket on this side
    EXP1_7=PD0, EXP1_8=PD1,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PC6, EXP2_4=PA4,
    EXP2_5=PC7, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PB10, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

[output_pin caselight]
pin: PB4
pwm: false
value: 1
shutdown_value: 0

[neopixel sb_leds]
pin: PA3
chain_count: 3
# #   The number of Neopixel chips that are "daisy chained" to the
# #   provided pin. The default is 1 (which indicates only a single
# #   Neopixel is connected to the pin).
color_order: GRBW
# #   Set the pixel order required by the LED hardware. Options are GRB,
# #   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.2
initial_GREEN: 0.5
initial_BLUE: 0.6
initial_WHITE: 0.1
# #   Sets the initial LED color of the Neopixel. Each value should be
# #   between 0.0 and 1.0. The WHITE option is only available on RGBW
# #   LEDs. The default for each color is 0.#


[duplicate_pin_override]
pins: PA1
# Put there the pin used by the encoder and the filament_motion_sensor
# It has to be the same pin for those 3

[filament_motion_sensor encoder_sensor]
switch_pin: ^PA1
pause_on_runout: True
detection_length: 20
extruder: extruder
runout_gcode:
    RESPOND PREFIX=tgalarm_photo MSG="Out of Filament! Machine Paused"

###############################
# ERCF module
###############################

[ercf]
# Encoder 
encoder_pin: ^PA1
encoder_resolution: 1.36882129 # in mm
# Speeds and accels
# Long moves are faster than the small ones
# 100mm/s should be "quiet" with the NEMA14 motor or a NEMA17 pancake, but you can go lower if your really want it to be low noise
# Tested without any issue at 200mm/s, but it's noisy. I'm running mine at 170mm/s for long moves and 50mm/s for short moves.
long_moves_speed: 10 # mm/s. Default value is 10mm/s.
long_moves_accel: 50 # mm/s². Default value is 50mm/s²
short_moves_speed: 5 # mm/s. Default value is 5mm/s.
short_moves_accel: 25 # mm/s². Default value is 25mm/s²
# Base value for the loading length used by the auto-calibration macro
# Please use a value SMALLER than the real reverse bowden length (like 50mm less)
min_bowden_length: 100.0
# Beware that the clog detection and endless spool mode are in BETA mode for now
# Use at your own risk (beware of the involved macros and the pause(s) and resume ones)
# Put 0 to disable, 1 to enable
clog_detection: 0

[gcode_macro DISPLAY_ENCODER_POS]
description: Display current value of the encoder
gcode:
    M118 Encoder value is {printer['ercf'].encoder_pos|float}

[gcode_macro CALIBRATE_ENCODER]
description: WARNING! Remove hotend first!
gcode:
    ERCF_CALIBRATE_ENCODER

[gcode_macro RESET_ENCODER_COUNTS]
description: Set encoder to zero
gcode:
    ERCF_RESET_ENCODER_COUNTS

[gcode_macro CLOG_OR_RUNOUT]
description: Actions taken if a clog or a runout is detected by the ERCF encoder
gcode:
    ERCF_RESET_ENCODER_COUNTS
    M83
    G1 E-10 F300
    {% if printer.ercf.encoder_pos|float != 0 %}
        M118 Clog detected, please check the ERCF and the printer
    {% else %}
        M118 Runout detected !

        SAVE_GCODE_STATE NAME=PAUSE_state
        # Adapt the example below to your own setup
        # The goal is just to clean the nozzle after the change
        # In my case I have a purge bucket with a brush
        # G0 X45 Y300 F18000
        # G0 X45 Y310 Z1 F3000

        # Custom unload sequence

        ERCF_CHECK_IF_RESUME
    {% endif %}

[gcode_macro CHECK_IF_RESUME]
description: Safety checks before resuming the print after an encoder event
gcode:
    {% if printer["gcode_macro ERCF_PAUSE"].is_paused|int == 0 %}
        # Adapt the example below to your own setup
        # The goal is just to clean the nozzle after the change
        # In my case I have a purge bucket with a brush
        # BRUSH_PURGE LENGTH=50
        # BRUSH_CLEAN
        M83
        G1 E50 F600
        G1 E-1 F300
        RESTORE_GCODE_STATE NAME=PAUSE_state
        RESUME
        SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
    {% endif %}
